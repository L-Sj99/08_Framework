#오라클 DB 연결 정보
spring.datasource.hikari.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@localhost:1521:XE
#학원 DB 서버 연결 URL
#spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@khj-1.xyz:10000:XE

spring.datasource.hikari.username=SPRING_LSJ
spring.datasource.hikari.password=SPRING1234

# HikariCP Connection Pool Properties
#풀이 연결을 사용할 수 있을 때까지 대기하는 최대 시간(ms)을 지정
spring.datasource.hikari.connection-timeout=30000

#풀의 최대 연결 수 설정
spring.datasource.hikari.maximum-pool-size=5

#연결이 풀에서 유휴 상태로 있을 수 있는 최대 시간(ms)을 지정
spring.datasource.hikari.idle-timeout=600000

#연결 풀의 이름을 지정
spring.datasource.hikari.pool-name=MyHikariCP

#자동 커밋 끄기
spring.datasource.hikari.auto-commit=false

# 비밀번호 : gyhs hgxc jbcs nuys
#Google SMTP에 사용할 username, password  (구글 계정)
spring.mail.username=yms6897@gmail.com
spring.mail.password=gyhs hgxc jbcs nuys

#Redis 연결 정보
spring.redis.host=localhost
spring.redis.port=6379

# 파일을 디스크에 쓸 때까지의 임계값
# 기본값: 0B
# 52,428,800 == 50MB
# -> 업로드되는 파일의 크기 50MB 까지는 메모리에 저장하다가
#   초과 시 디스크(HDD, SSD)에 저장
spring.servlet.multipart.file-size-threshold = 52428800

# HTTP 요청당 최대 크기
# 기본값: 10MB
# 52,428,800 == 50MB
spring.servlet.multipart.max-request-size = 52428800

# 개별 파일당 최대 크기
# 기본값: 1MB
# 10,485,760 == 10MB
spring.servlet.multipart.max-file-size = 10485760

# 파일의 임시 저장 경로
# webapp이 없는 spring boot는 
# \AppData\Local\Temp\tomcat.80.8112373015951616349\work\Tomcat\localhost\ROOT\ 
# 라는 톰캣 기본 폴더로 저장 경로가 지정된다
# -> 상대 경로 작성법 없음, 절대 경로만 가능
spring.servlet.multipart.location = C:\\uploadFiles\\temp\\

# -----------------------------------------------------------------
# [웹에서 파일 요청 시 서버에 어떤 폴더로 연결한 것인가]
# /images/test/ 로 시작하는 요청이 있을 경우
my.test.resource-handler = /images/test/**

# C:/uploadFile/test/ 폴더로 연결
my.test.resource-location = file:///C:/uploadFiles/test/

#[Service에서 파일을 서버, DB에 저장할 때 사용할 경로]
# folder-path에 저장된 파일을 요청하고 싶을 때 사용할 주소(URL)
my.test.web-path = /images/test/

# 프로필 업로드 시 업로드 된 파일이 저장될 폴더 경로
my.test.folder-path = C:/uploadFiles/test/



# [웹에서 파일 요청 시 서버에 어떤 폴더로 연결한 것인가]
# /images/test/ 로 시작하는 요청이 있을 경우
my.profile.resource-handler = /images/profile/**

# C:/uploadFile/profile/ 폴더로 연결
my.profile.resource-location = file:///C:/uploadFiles/profile/

#[Service에서 파일을 서버, DB에 저장할 때 사용할 경로]
# folder-path에 저장된 파일을 요청하고 싶을 때 사용할 주소(URL)
my.profile.web-path = /images/profile/

# 프로필 업로드 시 업로드 된 파일이 저장될 폴더 경로
my.profile.folder-path = C:/uploadFiles/profile/

# ----------------------------------------------------------------
# [웹에서 파일 요청 시 서버에 어떤 폴더로 연결한 것인가]
# /images/test/ 로 시작하는 요청이 있을 경우
my.board.resource-handler = /images/board/**

# C:/uploadFile/profile/ 폴더로 연결
my.board.resource-location = file:///C:/uploadFiles/board/

#[Service에서 파일을 서버, DB에 저장할 때 사용할 경로]
# folder-path에 저장된 파일을 요청하고 싶을 때 사용할 주소(URL)
my.board.web-path = /images/board/

# 프로필 업로드 시 업로드 된 파일이 저장될 폴더 경로
my.board.folder-path = C:/uploadFiles/board/

# ----------------------------------------------------------------
# [웹에서 파일 요청시 서버에 어떤 폴더로 연결할것인가]
# /images/test/ 로 시작하는 요청이 있을 경우
my.board.resource-handler = /images/board/**

# C:/uploadFiles/test/ 폴더로 연결
my.board.resource-location = file:///C:/uploadFiles/board/

#[Service에서 파일을 서버, DB에 저장할 때 사용할 경로]
# folder-path에 저장된 파일을 요청하고 싶을 때 사용할 주소(URL)
my.board.web-path = /images/board/

# 프로필 업로드시 파일이 저장될 폴더경로
my.board.folder-path = C:/uploadFiles/board/

# log 파일이 저장될 경로
log.config.path = C:/log/

# log 파일의 이름
log.config.fileName = boardProject-log